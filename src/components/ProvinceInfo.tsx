import { useState } from "react";
import ChartModal from "./ChartModal";
import "./ProvinceInfo.css";

interface ProvinceData {
  id: number;
  prov_code: string;
  prov_name: string;
  prov_fname: string;
  prov_ne: string;
  prov_fne: string;
  level: string;
  region: string | null;
  clime: string | null;
  sort: number;
  pop: number | null;
  area: number | null;
  gdp: number | null;
}

interface ProvinceInfoProps {
  province: ProvinceData | null;
  provinces?: ProvinceData[];
}

const ProvinceInfo: React.FC<ProvinceInfoProps> = ({
  province,
  provinces = [],
}) => {
  const [isChartModalOpen, setIsChartModalOpen] = useState(false);
  if (!province) {
    return (
      <div className="province-info">
        <div className="info-placeholder">
          <div className="placeholder-icon">üó∫Ô∏è</div>
          <h3>Ch·ªçn m·ªôt t·ªânh th√†nh</h3>
          <p>Click v√†o b·∫£n ƒë·ªì ƒë·ªÉ xem th√¥ng tin chi ti·∫øt v·ªÅ t·ªânh th√†nh</p>

          <div className="quick-stats">
            <h4>üìä Th·ªëng k√™ t·ªïng quan</h4>
            <div className="stats-grid">
              <div className="stat-item">
                <span className="stat-number">63</span>
                <span className="stat-label">T·ªânh th√†nh</span>
              </div>
              <div className="stat-item">
                <span className="stat-number">~102M</span>
                <span className="stat-label">D√¢n s·ªë</span>
              </div>
              <div className="stat-item">
                <span className="stat-number">331K</span>
                <span className="stat-label">km¬≤ di·ªán t√≠ch</span>
              </div>
            </div>
          </div>

          <div className="instructions">
            <h4>üí° H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng</h4>
            <ul>
              <li>
                üñ±Ô∏è <strong>Click</strong> v√†o t·ªânh ƒë·ªÉ xem th√¥ng tin
              </li>
              <li>
                üîç <strong>Hover</strong> ƒë·ªÉ xem t√™n t·ªânh
              </li>
              <li>
                üè† <strong>Reset</strong> ƒë·ªÉ v·ªÅ t·ªïng quan
              </li>
              <li>
                ‚ö° <strong>Zoom</strong> t·ª± ƒë·ªông khi ch·ªçn t·ªânh
              </li>
            </ul>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="province-info">
      <div className="province-header">
        <h2>{province.prov_name}</h2>
        <span className="province-code">M√£: {province.prov_code}</span>
      </div>

      <div className="province-details">
        <div className="detail-section">
          <h3>üìç Th√¥ng tin c∆° b·∫£n</h3>
          <div className="detail-grid">
            <div className="detail-item">
              <span className="label">T√™n ƒë·∫ßy ƒë·ªß:</span>
              <span className="value">{province.prov_fname}</span>
            </div>
            <div className="detail-item">
              <span className="label">T√™n ti·∫øng Anh:</span>
              <span className="value">{province.prov_fne}</span>
            </div>
            <div className="detail-item">
              <span className="label">C·∫•p h√†nh ch√≠nh:</span>
              <span className="value">{province.level}</span>
            </div>
            <div className="detail-item">
              <span className="label">Th·ª© t·ª±:</span>
              <span className="value">#{province.sort}</span>
            </div>
          </div>
        </div>

        <div className="detail-section">
          <h3>üìä Th·ªëng k√™</h3>
          <div className="stats-container">
            <div className="stat-card">
              <div className="stat-icon">üë•</div>
              <div className="stat-content">
                <span className="stat-value">
                  {province.pop
                    ? province.pop.toLocaleString()
                    : "Ch∆∞a c√≥ d·ªØ li·ªáu"}
                </span>
                <span className="stat-title">D√¢n s·ªë</span>
              </div>
            </div>

            <div className="stat-card">
              <div className="stat-icon">üìè</div>
              <div className="stat-content">
                <span className="stat-value">
                  {province.area
                    ? `${province.area.toLocaleString()} km¬≤`
                    : "Ch∆∞a c√≥ d·ªØ li·ªáu"}
                </span>
                <span className="stat-title">Di·ªán t√≠ch</span>
              </div>
            </div>

            <div className="stat-card">
              <div className="stat-icon">üí∞</div>
              <div className="stat-content">
                <span className="stat-value">
                  {province.gdp
                    ? `${province.gdp.toLocaleString()} t·ª∑ VNƒê`
                    : "Ch∆∞a c√≥ d·ªØ li·ªáu"}
                </span>
                <span className="stat-title">GDP</span>
              </div>
            </div>
          </div>
        </div>

        <div className="detail-section">
          <h3>üåç Th√¥ng tin b·ªï sung</h3>
          <div className="detail-grid">
            <div className="detail-item">
              <span className="label">V√πng mi·ªÅn:</span>
              <span className="value">
                {province.region || "Ch∆∞a ph√¢n lo·∫°i"}
              </span>
            </div>
            <div className="detail-item">
              <span className="label">Kh√≠ h·∫≠u:</span>
              <span className="value">
                {province.clime || "Ch∆∞a c√≥ th√¥ng tin"}
              </span>
            </div>
          </div>
        </div>

        <div className="action-buttons">
          <button className="btn-primary">üìñ Xem th√™m th√¥ng tin</button>
          <button
            className="btn-secondary"
            onClick={() => setIsChartModalOpen(true)}
          >
            üìä Xem bi·ªÉu ƒë·ªì
          </button>
        </div>

        {/* Chart Modal */}
        {province && (
          <ChartModal
            isOpen={isChartModalOpen}
            onClose={() => setIsChartModalOpen(false)}
            province={province}
            allProvinces={provinces}
          />
        )}
      </div>
    </div>
  );
};

export default ProvinceInfo;
